{"version":3,"file":"/js/chart.js","mappings":"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","sources":["webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack:///./node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const baseStyle = readStyle(line.options);\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle = baseStyle;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex: line._datasetIndex\n      }));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { overrides as $, toPadding as A, each as B, getMaximumSize as C, _getParentNode as D, readUsedSize as E, throttled as F, supportsEventListenerOptions as G, HALF_PI as H, _isDomSupported as I, log10 as J, _factorize as K, finiteOrDefault as L, callback as M, _addGrace as N, toDegrees as O, PI as P, _measureText as Q, _int16Range as R, _alignPixel as S, TAU as T, clipArea as U, renderText as V, unclipArea as W, toFont as X, _toLeftRightCenter as Y, _alignStartEnd as Z, _arrayUnique as _, resolve as a, merge as a0, _capitalize as a1, descriptors as a2, isFunction as a3, _attachContext as a4, _createResolver as a5, _descriptors as a6, mergeIf as a7, uid as a8, debounce as a9, _setMinAndMaxByKey as aA, niceNum as aB, almostWhole as aC, almostEquals as aD, _decimalPlaces as aE, _longestText as aF, _filterBetween as aG, _lookup as aH, getHoverColor as aI, clone$1 as aJ, _merger as aK, _mergerIf as aL, _deprecated as aM, toFontString as aN, splineCurve as aO, splineCurveMonotone as aP, getStyle as aQ, fontString as aR, toLineHeight as aS, PITAU as aT, INFINITY as aU, RAD_PER_DEG as aV, QUARTER_PI as aW, TWO_THIRDS_PI as aX, _angleDiff as aY, retinaScale as aa, clearCanvas as ab, setsEqual as ac, _elementsEqual as ad, getAngleFromPoint as ae, _readValueToProps as af, _updateBezierControlPoints as ag, _computeSegments as ah, _boundSegments as ai, _steppedInterpolation as aj, _bezierInterpolation as ak, _pointInLine as al, _steppedLineTo as am, _bezierCurveTo as an, drawPoint as ao, addRoundedRectPath as ap, toTRBL as aq, toTRBLCorners as ar, _boundSegment as as, _normalizeAngle as at, getRtlAdapter as au, overrideTextDirection as av, _textX as aw, restoreTextDirection as ax, noop as ay, distanceBetweenPoints as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, toPercentage as k, listenArrayEvents as l, toDimension as m, formatNumber as n, _angleBetween as o, isNumber as p, _limitValue as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _lookupByKey as w, getRelativePosition as x, _isPointInArea as y, _rlookupByKey as z };\n","/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","distanceBetweenPoints","pt1","pt2","sqrt","_angleDiff","a","b","_normalizeAngle","_angleBetween","angle","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","v","r","g","isShort","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","constructor","ret","this","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","scope","values","defaults","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","has","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","item","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","baseStyle","readStyle","prevStyle","p0","p0DataIndex","p1DataIndex","_datasetIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","hidden","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","computeMinSampleSize","_cache","$bar","metas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","grouped","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","tooltip","title","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","error","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","setsEqual","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","getAngleFromPoint","rAdjust","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","inflateAmount","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","handleEvent","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","labelCount","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}